// Licensed under the Apache-2.0 license

#ifndef CALIPTRA_DPE_C_BINDING_H
#define CALIPTRA_DPE_C_BINDING_H

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

#define MAX_HANDLES 24

#define Command_GET_PROFILE 1

#define Command_INITIALIZE_CONTEXT 7

#define Command_DERIVE_CONTEXT 8

#define Command_CERTIFY_KEY 9

#define Command_SIGN 10

#define Command_ROTATE_CONTEXT_HANDLE 14

#define Command_DESTROY_CONTEXT 15

#define Command_GET_CERTIFICATE_CHAIN 16

#define CertifyKeyCmd_FORMAT_X509 0

#define CertifyKeyCmd_FORMAT_CSR 1

#define Context_ROOT_INDEX 255

#define State_VERSION 1

enum DpeProfile
#ifdef __cplusplus
  : uint32_t
#endif // __cplusplus
 {
  P256Sha256 = 3,
  P384Sha384 = 4,
};
#ifndef __cplusplus
typedef uint32_t DpeProfile;
#endif // __cplusplus

typedef struct CertifyKeyResp CertifyKeyResp;

typedef struct SignResp SignResp;

typedef struct CommandHdr {
  uint32_t magic;
  uint32_t cmd_id;
  uint32_t profile;
} CommandHdr;

typedef struct ResponseHdr {
  uint32_t magic;
  uint32_t status;
  DpeProfile profile;
} ResponseHdr;

typedef struct GetProfileResp {
  struct ResponseHdr resp_hdr;
  uint16_t major_version;
  uint16_t minor_version;
  uint32_t vendor_id;
  uint32_t vendor_sku;
  uint32_t max_tci_nodes;
  uint32_t flags;
} GetProfileResp;

typedef struct ContextHandle {
  uint8_t _0[SIZE];
} ContextHandle;
#define CONTEXT_HANDLE_SIZE 16

typedef struct NewHandleResp {
  struct ResponseHdr resp_hdr;
  struct ContextHandle handle;
} NewHandleResp;

typedef struct DeriveContextResp {
  struct ResponseHdr resp_hdr;
  struct ContextHandle handle;
  struct ContextHandle parent_handle;
} DeriveContextResp;

typedef struct DeriveContextExportedCdiResp {
  struct ResponseHdr resp_hdr;
  struct ContextHandle handle;
  struct ContextHandle parent_handle;
  uint8_t exported_cdi[MAX_EXPORTED_CDI_SIZE];
  uint32_t certificate_size;
  uint8_t new_certificate[MAX_CERT_SIZE];
} DeriveContextExportedCdiResp;

typedef struct GetCertificateChainResp {
  struct ResponseHdr resp_hdr;
  uint32_t certificate_size;
  uint8_t certificate_chain[MAX_CHUNK_SIZE];
} GetCertificateChainResp;





#endif  /* CALIPTRA_DPE_C_BINDING_H */
